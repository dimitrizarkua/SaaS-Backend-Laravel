version: '3.7'

services:
  postgres:
    image: postgres:10.3-alpine
    container_name: steamatic-postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=${BACKEND_DB_PASSWORD}
      - POSTGRES_USER=${BACKEND_DB_USERNAME}
      - POSTGRES_DB=${BACKEND_DB_NAME}
    restart: 'unless-stopped'
    labels:
      org.label-schema.group: "steamatic"

  postgres-test:
    image: postgres:10.3-alpine
    container_name: steamatic-postgres-test
    ports:
      - 5433:5432
    environment:
      - POSTGRES_PASSWORD=${TEST_DB_PASSWORD}
      - POSTGRES_USER=${TEST_DB_USERNAME}
      - POSTGRES_DB=${TEST_DB_NAME}
    restart: 'unless-stopped'
    labels:
      org.label-schema.group: "steamatic"

  rabbitmq:
    image: rabbitmq:3.6-management-alpine
    container_name: steamatic-rabbitmq
    ports:
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=${AMQP_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${AMQP_PASSWORD}
    restart: 'unless-stopped'
    labels:
      org.label-schema.group: "steamatic"

  redis:
    container_name: steamatic-redis
    image: redis:4.0-alpine
    command:
      - --loglevel warning
    restart: 'unless-stopped'
    labels:
      org.label-schema.group: "steamatic"

  backend:
    build:
      context: .
      target: development
    container_name: steamatic-backend
    ports:
      - 8000:80
    volumes:
      - ./:/app
    environment:
      - APP_KEY=${BACKEND_APP_KEY}
      - APP_ENV=local
      - DB_CONNECTION=pgsql
      - DB_USERNAME=${BACKEND_DB_USERNAME}
      - DB_PASSWORD=${BACKEND_DB_PASSWORD}
      - DB_DATABASE=${BACKEND_DB_NAME}
      - DB_HOST=postgres
      - DB_PORT=5432
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_LOGIN=${AMQP_USERNAME}
      - RABBITMQ_PASSWORD=${AMQP_PASSWORD}
      - CACHE_DRIVER=redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SCOUT_ELASTIC_HOST=elasticsearch:9200
      - XDEBUG_HOST=172.17.0.1
      - PINPAYMENT_TEST_MODE=${PINPAYMENT_TEST_MODE}
    command: 'dev_server'
    depends_on:
      - postgres
      - rabbitmq
      - redis
      - elasticsearch
    links:
      - postgres
      - rabbitmq
      - redis
      - elasticsearch
    restart: 'unless-stopped'
    labels:
      org.label-schema.group: "steamatic"

  backend-interpreter:
    build:
      context: .
      target: development
    container_name: steamatic-backend-interpreter
    volumes:
      - ./:/app
    environment:
      - APP_KEY=${BACKEND_APP_KEY}
      - APP_ENV=local
      - DB_CONNECTION=pgsql
      - DB_USERNAME=${TEST_DB_USERNAME}
      - DB_PASSWORD=${TEST_DB_PASSWORD}
      - DB_DATABASE=${TEST_DB_NAME}
      - DB_HOST=postgres-test
      - DB_PORT=5432
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_LOGIN=${AMQP_USERNAME}
      - RABBITMQ_PASSWORD=${AMQP_PASSWORD}
      - CACHE_DRIVER=redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SCOUT_ELASTIC_HOST=elasticsearch:9200
      - XDEBUG_HOST=172.17.0.1
      - PINPAYMENT_TEST_MODE=${PINPAYMENT_TEST_MODE}
    depends_on:
      - postgres-test
      - rabbitmq
      - redis
      - elasticsearch
    links:
      - postgres-test
      - rabbitmq
      - redis
      - elasticsearch
    restart: 'no'
    labels:
      org.label-schema.group: "steamatic"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.5.1
    container_name: steamatic-elasticsearch
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - discovery.type=single-node
    restart: 'unless-stopped'
    labels:
      org.label-schema.group: "steamatic"

  kibana:
    image: docker.elastic.co/kibana/kibana:6.5.1
    container_name: steamatic-kibana
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - XPACK_MONITORING_ENABLED=false
    depends_on:
      - elasticsearch
    links:
      - elasticsearch
    restart: 'unless-stopped'
    labels:
      org.label-schema.group: "steamatic"
